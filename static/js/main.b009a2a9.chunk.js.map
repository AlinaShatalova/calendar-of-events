{"version":3,"sources":["FilterList.js","context.js","EventCard.js","EventList.js","App.js","reportWebVitals.js","index.js"],"names":["FilterList","props","cities","months","onCityChange","onMonthChange","onFavChange","isActive","city","month","className","value","onChange","map","c","m","id","name","onClick","Context","React","createContext","EventCard","addFavorite","useContext","event","isFav","style","backgroundImage","image","date","split","EventList","events","isFavActive","favorites","filteredEvents","filter","Number","length","includes","favoriteList","renderList","App","useState","isLoading","setIsLoading","setEvents","setCities","userCity","setUserCity","String","userMonth","setUserMonth","userActive","setUserActive","setFavorites","useEffect","getEventInfo","fetch","then","response","json","forEach","item","push","savedFavs","localStorage","getItem","JSON","parse","Provider","favs","eventId","fav","setItem","stringify","e","target","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b009a2a9.chunk.js","sourcesContent":["import React from 'react'\nimport './FilterList.css'\n\nconst FilterList = (props) => {\n    const { cities, months, onCityChange, onMonthChange, onFavChange, isActive, city, month } = props;\n\n    return (\n        <div className=\"filters\">\n            <label>\n                City:\n                <select className=\"filters__select\" value={city} onChange={onCityChange}>\n                    {cities.map((c) => <option key={c} value={c}>{c}</option>)}\n                </select>\n            </label>\n            <label>\n                Months:\n                <select className=\"filters__select\" value={month} onChange={onMonthChange}>\n                    {months.map((m) => <option key={m.id} value={m.id}>{m.name}</option>)}\n                </select>\n            </label>\n            <button className={\"filters__button \" + (isActive ? \"pressed\" : \"unpressed\")} onClick={onFavChange} >Favorites</button>\n        </div>\n    )\n};\nexport default FilterList;","import React from 'react'\n\nconst Context = React.createContext();\n\nexport default Context;","import React, { useContext } from 'react'\nimport './EventCard.css'\nimport Context from './context';\n\nconst EventCard = (props) => {\n    const { addFavorite } = useContext(Context);\n    const { event, isFav } = props;\n\n    return (\n            <div className=\"event-card\" style={{backgroundImage: `url(${event.image})`}}>\n                <div className=\"event-card__date-border\"><div className=\"event-card__date\">{event.date.split('.', 1)}</div></div>\n                <div className={\"event-card__favorite \" + (isFav ? \"active\" : \"\")} onClick={() => {addFavorite(event)}} />\n                <div className=\"event-card__name\">{event.name}</div>\n            </div>\n    )\n};\nexport default EventCard;","import React from 'react'\nimport EventCard from './EventCard'\nimport './EventList.css'\n\nconst EventList = (props) => {\n    const { events, isFavActive, favorites, city, month } = props;\n    \n    const filteredList = () => {\n        let newList = [];\n        if (city === 'All cities' && month === '13') {\n            newList = events;\n        } else if (city === 'All cities' && month !== '13') {\n            newList = events.filter((event) => {\n                if (Number(event.date.split('.')[1]) === Number(month)) {\n                    return true;\n                } return false;\n            })\n        } else if (city !== 'All cities' && month === '13') {\n            newList = events.filter((event) => {\n                if (event.city === city) {\n                    return true;\n                } return false;\n            })\n        } else {\n            newList = events.filter((event) => {\n                if (event.city === city && Number(event.date.split('.')[1]) === Number(month)) {\n                    return true;\n                } return false;\n            })\n        }\n        return newList;\n    }\n\n    const filteredEvents = filteredList(); \n\n    const userFavoriteList = () => {\n        const newList = filteredEvents.filter((event) => {\n            if (favorites.includes(Number(event.id))) {\n                return true;\n            } return false;\n        })\n        return newList;\n    }\n\n    function renderList() {\n        if (!isFavActive && filteredEvents.length > 0) {\n            return (\n                <>\n                    {filteredEvents.map((event) => {\n                        return <EventCard key={event.id} event={event} isFav={favorites.includes(Number(event.id)) ? true : false} />\n                        \n                    })}\n                </>\n            )\n        }  else if (isFavActive && favorites.length > 0) {\n            const favoriteList = userFavoriteList();\n            return (\n                <>\n                    {favoriteList.length > 0 ? '' : <p className=\"no-events\">Events not found</p>}\n                    {favoriteList.map((event) => {\n                            return <EventCard key={event.id} event={event} isFav={favorites.includes(Number(event.id)) ? true : false} />                 \n                    })}\n                </>\n            )\n        } else {\n            return <p className=\"no-events\">Events not found</p>\n        }\n    }\n\n    return (\n        <div className=\"event-list\">\n            {renderList()}\n        </div>\n    )\n};\nexport default EventList;\n\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport FilterList from './FilterList';\nimport EventList from './EventList';\nimport Context from './context'\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [events, setEvents] = useState([]);\n  const [cities, setCities] = useState([]);\n  const months = [\n    {id: 1, name: 'January'},\n    {id: 2, name: 'February'},\n    {id: 3, name: 'March'},\n    {id: 4, name: 'April'},\n    {id: 5, name: 'May'},\n    {id: 6, name: 'June'},\n    {id: 7, name: 'July'},\n    {id: 8, name: 'August'},\n    {id: 9, name: 'September'},\n    {id: 10, name: 'October'},\n    {id: 11, name: 'November'},\n    {id: 12, name: 'December'},\n    {id: 13, name: 'All months'},\n  ];\n\n  const [userCity, setUserCity] = useState('');\n  const [userMonth, setUserMonth] = useState(String(13));\n  const [userActive, setUserActive] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n\n\n  useEffect(() => {\n    getEventInfo();\n    }, []);\n\n  const getEventInfo = () => {\n    const url = 'https://raw.githubusercontent.com/xsolla/xsolla-frontend-school-2021/main/events.json';\n    \n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => {\n        setEvents(json);\n\n        const cities = [];\n        json.forEach((item) => {\n          if (!cities.includes(item.city)) {\n            cities.push(item.city);\n          }\n        })\n        cities.push('All cities');\n        setCities(cities);\n\n        setUserCity(cities[cities.length - 1]);\n\n        let savedFavs = localStorage.getItem('savedFavorites') === null ? [] : JSON.parse(localStorage.getItem('savedFavorites'));\n        setFavorites(savedFavs);\n      })\n      .then(() => setIsLoading(false))\n  }\n\n  const handleChangeCity = (e) => {\n    setUserCity(e.target.value);\n  }\n\n  const handleChangeMonth = (e) => {\n    setUserMonth(e.target.value);\n  }\n\n  function handleFavActive(e) {\n    e.preventDefault();\n    setUserActive(!userActive);\n    setUserCity(cities[cities.length - 1]);\n    setUserMonth(String(13));\n  }\n\n  function addFavorite(event) {\n    let favs;\n    const eventId = Number(event.id);\n    if (!favorites.includes(eventId)) {\n      favs = [...favorites, eventId];\n    } else {\n      favs = favorites.filter((fav) => fav !== eventId);\n    }\n    setFavorites(favs);\n    localStorage.setItem('savedFavorites', JSON.stringify(favs));\n}\n\n  return (\n    <Context.Provider value={{ addFavorite }}>\n      <div className=\"App\">\n        <h1>Event listing</h1>\n        <FilterList \n          cities={cities}\n          months={months}\n          onCityChange={handleChangeCity}\n          onMonthChange={handleChangeMonth}\n          onFavChange={handleFavActive}\n          isActive={userActive}\n          city={userCity}\n          month={userMonth}\n        />\n        {isLoading ? <p className=\"loading\" >Loading...</p> : <EventList \n          events={events}\n          isFavActive={userActive}\n          favorites={favorites}\n          city={userCity}\n          month={userMonth}\n        />}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}